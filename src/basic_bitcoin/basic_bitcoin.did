type satoshi = nat64;

type millisatoshi_per_vbyte = nat64;

type bitcoin_address = text;

type transaction_id = text;

type block_hash = blob;

type block_height = nat32;

type network = variant {
  regtest;
  testnet;
  mainnet;
};

type outpoint = record {
  txid : blob;
  vout : nat32;
};

type PricePoint = record {
    timestamp: text;
    price_usd: float64;
};

type BlockchainStats = record {
    blocks: nat64;
    transactions: nat64;
    outputs: nat64;
    circulation: nat64;
    blocks_24h: nat64;
    transactions_24h: nat64;
    difficulty: float64;
    volume_24h: nat64;
    mempool_transactions: nat64;
    mempool_size: nat64;
    mempool_tps: float64;
    mempool_total_fee_usd: float64;
    best_block_height: nat64;
    best_block_hash: text;
    best_block_time: text;
    blockchain_size: nat64;
    average_transaction_fee_24h: nat64;
    inflation_24h: nat64;
    median_transaction_fee_24h: nat64;
    cdd_24h: float64;
    mempool_outputs: nat64;
    nodes: nat64;
    hashrate_24h: text;
    inflation_usd_24h: float64;
    average_transaction_fee_usd_24h: float64;
    median_transaction_fee_usd_24h: float64;
    market_price_usd: float64;
    market_price_btc: float64;
    market_price_usd_change_24h_percentage: float64;
    market_cap_usd: float64;
    market_dominance_percentage: float64;
    next_retarget_time_estimate: opt text;
    next_difficulty_estimate: opt float64;
    suggested_transaction_fee_per_byte_sat: nat64;
    hodling_addresses: nat64;
};

type BlockSummary = record {
    block_height: block_height;
    block_hash: text;
    timestamp: text;
    transaction_count: nat64;
};

type TransactionSummary = record {
  txid: text;
  time: text;
  input_total: nat64;
  input_total_usd: float64;
  output_total: nat64;
  output_total_usd: float64;
  fee: nat64;
  fee_usd: float64;
};

type utxo = record {
  outpoint : outpoint;
  value : satoshi;
  height : nat32;
};

type get_utxos_response = record {
  utxos : vec utxo;
  tip_block_hash : block_hash;
  tip_height : block_height;
  next_page : opt blob;
};

type block_header = blob;

type get_block_headers_response = record {
  tip_height : block_height;
  block_headers : vec block_header;
};

service : (network) -> {
  "get_p2pkh_address" : () -> (bitcoin_address);

  "get_p2tr_script_spend_address" : () -> (bitcoin_address);

  "get_p2tr_raw_key_spend_address" : () -> (bitcoin_address);

  "get_balance" : (address : bitcoin_address) -> (satoshi);

  "get_utxos" : (bitcoin_address) -> (get_utxos_response);

  "get_block_headers" : (start_height : block_height, end_height : opt block_height) -> (get_block_headers_response);

  "get_current_fee_percentiles" : () -> (vec millisatoshi_per_vbyte);

  "send_from_p2pkh" : (
    record {
      destination_address : bitcoin_address;
      amount_in_satoshi : satoshi;
    }
  ) -> (transaction_id);

  "send_from_p2tr_script_spend" : (
    record {
      destination_address : bitcoin_address;
      amount_in_satoshi : satoshi;
    }
  ) -> (transaction_id);

  "send_from_p2tr_raw_key_spend" : (
    record {
      destination_address : bitcoin_address;
      amount_in_satoshi : satoshi;
    }
  ) -> (transaction_id);

  "get_blockchain_stats" : () -> (variant { Ok : BlockchainStats; Err : text });
  "get_latest_blocks" : () -> (variant { Ok : vec BlockSummary; Err : text });
  "get_latest_transactions" : () -> (variant { Ok : vec TransactionSummary; Err : text });
  "get_latest_price" : () -> (variant { Ok : PricePoint; Err : text });
};
